{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/imaru/Desktop/arun-portfolio/src/app/api/send-email/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { Resend } from 'resend';\r\n\r\n// Initialize Resend with your API key from environment variables\r\nconsole.log(\"[API Route Start] RESEND_API_KEY from env:\", process.env.RESEND_API_KEY); // Initial check\r\nconst resend = new Resend(process.env.RESEND_API_KEY);\r\n\r\n// Your email address where you want to receive contact form submissions\r\nconst TO_EMAIL = 'arun.devfolio@gmail.com'; \r\n// The email address emails will be sent from. \r\n// IMPORTANT: This email MUST be a verified domain in your Resend account.\r\n// For initial testing, Resend might allow `onboarding@resend.dev`, but for production, verify your own domain.\r\nconst FROM_EMAIL = 'onboarding@resend.dev'; // Replace with your verified domain email like 'noreply@yourdomain.com'\r\n\r\nexport async function POST(request: NextRequest) {\r\n  console.log(\"[POST Request] RESEND_API_KEY from env:\", process.env.RESEND_API_KEY); // Check on request\r\n  try {\r\n    // Parse the request body to get form data\r\n    const { name, email, subject, message } = await request.json();\r\n\r\n    if (!process.env.RESEND_API_KEY) {\r\n      console.error('CRITICAL: RESEND_API_KEY is not defined in the environment.');\r\n      return NextResponse.json({ error: 'API Key is missing in server configuration.' }, { status: 500 });\r\n    }\r\n\r\n    if (!name || !email || !subject || !message) {\r\n      return NextResponse.json({ error: 'Missing required fields' }, { status: 400 });\r\n    }\r\n\r\n    // Send the email using Resend\r\n    const { data, error } = await resend.emails.send({\r\n      from: `Portfolio Contact <${FROM_EMAIL}>`, // Sender name and email\r\n      to: [TO_EMAIL], // Your email address\r\n      replyTo: email, // Corrected: Set the sender's email as replyTo for easy response\r\n      subject: `New Contact Form Submission: ${subject}`,\r\n      html: `\r\n        <div style=\"font-family: Arial, sans-serif; line-height: 1.6;\">\r\n          <h2 style=\"color: #333;\">New Contact Form Submission</h2>\r\n          <p><strong>Name:</strong> ${name}</p>\r\n          <p><strong>Email:</strong> ${email}</p>\r\n          <p><strong>Subject:</strong> ${subject}</p>\r\n          <p><strong>Message:</strong></p>\r\n          <p style=\"white-space: pre-wrap; background-color: #f9f9f9; border: 1px solid #eee; padding: 10px; border-radius: 5px;\">${message}</p>\r\n          <hr style=\"border: none; border-top: 1px solid #eee; margin: 20px 0;\"/>\r\n          <p style=\"font-size: 0.9em; color: #777;\">This email was sent from your portfolio contact form.</p>\r\n        </div>\r\n      `,\r\n    });\r\n\r\n    if (error) {\r\n      console.error('Resend API Error:', error);\r\n      return NextResponse.json({ error: 'Error sending email', details: error.message }, { status: 500 });\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Email sent successfully!', data }, { status: 200 });\r\n\r\n  } catch (err) {\r\n    console.error('Server Error:', err);\r\n    // Check if err is an instance of Error to safely access err.message\r\n    const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred';\r\n    return NextResponse.json({ error: 'Internal Server Error', details: errorMessage }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,iEAAiE;AACjE,QAAQ,GAAG,CAAC,8CAA8C,QAAQ,GAAG,CAAC,cAAc,GAAG,gBAAgB;AACvG,MAAM,SAAS,IAAI,0IAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,CAAC,cAAc;AAEpD,wEAAwE;AACxE,MAAM,WAAW;AACjB,+CAA+C;AAC/C,0EAA0E;AAC1E,+GAA+G;AAC/G,MAAM,aAAa,yBAAyB,wEAAwE;AAE7G,eAAe,KAAK,OAAoB;IAC7C,QAAQ,GAAG,CAAC,2CAA2C,QAAQ,GAAG,CAAC,cAAc,GAAG,mBAAmB;IACvG,IAAI;QACF,0CAA0C;QAC1C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE5D,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;YAC/B,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA8C,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS;YAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QAC/E;QAEA,8BAA8B;QAC9B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;YAC/C,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;YACzC,IAAI;gBAAC;aAAS;YACd,SAAS;YACT,SAAS,CAAC,6BAA6B,EAAE,SAAS;YAClD,MAAM,CAAC;;;oCAGuB,EAAE,KAAK;qCACN,EAAE,MAAM;uCACN,EAAE,QAAQ;;kIAEiF,EAAE,QAAQ;;;;MAItI,CAAC;QACH;QAEA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,qBAAqB;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;gBAAuB,SAAS,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAA4B;QAAK,GAAG;YAAE,QAAQ;QAAI;IAExF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,oEAAoE;QACpE,MAAM,eAAe,eAAe,QAAQ,IAAI,OAAO,GAAG;QAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAyB,SAAS;QAAa,GAAG;YAAE,QAAQ;QAAI;IACpG;AACF","debugId":null}}]
}